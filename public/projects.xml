<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Clarence Siew</title>
    <description>Clarence Siew's personal projects</description>
    <generator>Custom RSS generator</generator>
    <link>https://clarencesiew.com</link>
    <lastBuildDate>Mon, 10 Jun 2024 09:56:53 GMT</lastBuildDate>
    <atom:link href="https:/clarencesiew.com/rss.xml" rel="self" type="application/rss+xml"/>
    <item>
      <title>Antorca Linux</title>
      <author>Clarence Siew</author>
      <description>More polished rebranding and continuation of illume OS</description>
      <keywords/>
      <slug>antorca-linux</slug>
      <link>https:/clarencesiew.com/projects/antorca-linux</link>
      <guid>https:/clarencesiew.com/projects/antorca-linux</guid>
      <content:encoded><![CDATA[<p>A Debian-based Linux distribution designed for a simple out of the box experience. Ideal for Windows users transitioning to Linux. It used the Xfce desktop environment.</p>
<p>A variant based on Ubuntu with Flatpak integration was in the works shortly before its abandonment. I also considered reviving Antorca Linux with my custom window manager, <a href="/projects/biscuitwm">BiscuitWM</a>, at one point.</p>]]></content:encoded>
    </item>
    <item>
      <title>BiscuitWM</title>
      <author>Clarence Siew</author>
      <description>Experimental window manager based on the Python version of TinyWM</description>
      <keywords/>
      <slug>biscuitwm</slug>
      <link>https:/clarencesiew.com/projects/biscuitwm</link>
      <guid>https:/clarencesiew.com/projects/biscuitwm</guid>
      <content:encoded><![CDATA[<p>A minimalist X11 window manager for Linux/Unix systems written in Python. It's largely an experimental project. It's based on <a href="https://github.com/mackstann/tinywm">TinyWM</a> and <a href="https://github.com/h-ohsaki/xpywm">xpywm</a>.</p>]]></content:encoded>
    </item>
    <item>
      <title>Brioche</title>
      <author>Clarence Siew</author>
      <description>UI library for React projects</description>
      <keywords/>
      <slug>brioche</slug>
      <link>https:/clarencesiew.com/projects/brioche</link>
      <guid>https:/clarencesiew.com/projects/brioche</guid>
      <content:encoded><![CDATA[<p>Brioche is a React UI component library based off the reusable components and stylesheets that were developed via my personal website over the years. It is currently under heavy development and may not have all commonly-used UI components.</p>
<p>It is the successor to <a href="/projects/cardo">Cardo</a>, my previous attempt at building a UI component library.</p>]]></content:encoded>
    </item>
    <item>
      <title>Cardo</title>
      <author>Clarence Siew</author>
      <description>Experimental client-side frontend library</description>
      <keywords/>
      <slug>cardo</slug>
      <link>https:/clarencesiew.com/projects/cardo</link>
      <guid>https:/clarencesiew.com/projects/cardo</guid>
      <content:encoded><![CDATA[<p>A client-side web frontend library (more so a collection of functions to enable single-page web apps). The previous version of my site and my 'Hoddle' Javascript window manager contain the foundational work for this library. The initial version of my upcoming podcast app used this library extensively.</p>
<p>It does not add additional syntactic sugar to the existing HTML syntax of a site (unlike <em>Vue.js</em> or <em>Svelte</em>). It is largely made up of utility functions written in vanilla JavaScript with some JQuery thrown-in (for stuff like changing out contents of an element, performing data calls, etc). My own custom utility CSS stylesheets also work hand-in-hand with this library to provide pre-designed UI elements.</p>
<p>Cardo's CSS utility library survived beyond <em>Cast's</em> transition to Vue.js. The latest iteration of it powers this site. This CSS utility library along with the custom React components in use on this site are in the process of being converted into a reusable library.</p>]]></content:encoded>
    </item>
    <item>
      <title>Cast</title>
      <author>Clarence Siew</author>
      <description>Podcast web app</description>
      <keywords/>
      <slug>cast</slug>
      <link>https:/clarencesiew.com/projects/cast</link>
      <guid>https:/clarencesiew.com/projects/cast</guid>
      <content:encoded><![CDATA[<p>A podcast web app that allows you to manage your podcast subscriptions and bookmarks with an intuitive, well-organised interface.</p>
<p>It used the Node.js runtime with the Express framework for its backend API service.</p>
<p>The initial version of Cast used my own custom frontend library, Cardo. However I later switched to the Vue.js framework.</p>
<p>This project came very close to a public release just before I got my first full-time job. I am considering the possibility of rebuilding this (with drastically better architectural decisions).</p>]]></content:encoded>
    </item>
    <item>
      <title>Hoddle</title>
      <author>Clarence Siew</author>
      <description>Toy window manager within a web page</description>
      <keywords/>
      <slug>hoddle</slug>
      <link>https:/clarencesiew.com/projects/hoddle</link>
      <guid>https:/clarencesiew.com/projects/hoddle</guid>
      <content:encoded><![CDATA[<p>An experimental client-side JavaScript frontend library to turn a web page into a desktop-like environment. It allows for moveable and resizeable windows.</p>
<p>It was supposed to become a framework, but it was abandoned in favour of <a href="/projects/cardo">Cardo</a>, and later <a href="/projects/brioche">Brioche</a>.</p>]]></content:encoded>
    </item>
    <item>
      <title>illume OS</title>
      <author>Clarence Siew</author>
      <description>Linux distribution targeted at older hardware</description>
      <keywords/>
      <slug>illume-os</slug>
      <link>https:/clarencesiew.com/projects/illume-os</link>
      <guid>https:/clarencesiew.com/projects/illume-os</guid>
      <content:encoded><![CDATA[<p>A lightweight Debian-based Linux distribution designed for old hardware (e.g. 32-bit x86 PCs). It used IceWM as its window manager in version 1.x, before transitioning to the LXDE desktop environment from version 2.x onwards.</p>]]></content:encoded>
    </item>
    <item>
      <title>md2magic</title>
      <author>Clarence Siew</author>
      <description>Experimental toy static site generator</description>
      <keywords/>
      <slug>md2magic</slug>
      <link>https:/clarencesiew.com/projects/md2magic</link>
      <guid>https:/clarencesiew.com/projects/md2magic</guid>
      <content:encoded><![CDATA[<p>A static site generator written in Python. Ideal for blogs. Work on a rewrite had been on-and-off until 2020.</p>]]></content:encoded>
    </item>
    <item>
      <title>Podzol</title>
      <author>Clarence Siew</author>
      <description>Podcasts in your terminal</description>
      <keywords/>
      <slug>podzol</slug>
      <link>https:/clarencesiew.com/projects/podzol</link>
      <guid>https:/clarencesiew.com/projects/podzol</guid>
      <content:encoded><![CDATA[<p>A podcast app that lives in your terminal. It stores indexes of your podcast subscriptions and episode data in JSON files. It's written in Python and uses the pygame library for audio streaming functionality. Limitations with pygame and cross-platform compatibiltiy (Linux and macOS) led me to start working on a web-based podcast client (which was initially codenamed Podzol).</p>]]></content:encoded>
    </item>
    <item>
      <title>Tab Shelf</title>
      <author>Clarence Siew</author>
      <description>Manage your Chrome tabs from the side panel</description>
      <keywords/>
      <slug>tab-shelf</slug>
      <link>https:/clarencesiew.com/projects/tab-shelf</link>
      <guid>https:/clarencesiew.com/projects/tab-shelf</guid>
      <content:encoded><![CDATA[<p>An extension for Google Chrome to let you view and manage your tabs from the side panel. It provides easy access to various controls to sleep tabs, regroup/ungroup tabs, and close them. It was designed to look as close as possible as to what a native implementation of vertical tabs in Chrome would look like (with some creative liberties for the sake of usability).</p>]]></content:encoded>
    </item>
    <item>
      <title>TransitSafe</title>
      <author>Clarence Siew</author>
      <description>Public transport alerts for the little things</description>
      <keywords/>
      <slug>transitsafe</slug>
      <link>https:/clarencesiew.com/projects/transitsafe</link>
      <guid>https:/clarencesiew.com/projects/transitsafe</guid>
      <content:encoded><![CDATA[<p>An app and service that lets commuters report incidents (crime, hygiene, medical emergencies, etc) on public transport. It used the Public Transport Victoria APIs to get data on public transport services and station metadata.</p>]]></content:encoded>
    </item>
    <item>
      <title>Website</title>
      <author>Clarence Siew</author>
      <description>This very website</description>
      <keywords/>
      <slug>website</slug>
      <link>https:/clarencesiew.com/projects/website</link>
      <guid>https:/clarencesiew.com/projects/website</guid>
      <content:encoded><![CDATA[<h3 id="preframeworkera">Pre-framework era</h3>
<h4 id="prehistoric2018">Pre-historic (????-2018)</h4>
<p>I only recently recalled that I hosted very early versions of my website on Google Firebase before migrating to GitHub Pages. I also used to build websites using Google Sites (they were effectively wikis), but they have since been lost to time.</p>
<h4 id="version1020182022">Version 1.0 (2018-2022)</h4>
<p>Initial implementation using plain HTML, CSS, and JavaScript. Early revisions were not single-page apps, and often swung wildly between brutalist web design and skeumorphic design. The final revision of version 1.0 used JavaScript to inject templated components like the navigation bar and site footer (which is the <em>opposite</em> of what most modern JavaScript SPA frameworks do). This project used my now-abandoned frontend library, <em>Cardo</em>, to perform these injections. <a href="https://csiew.github.io/archive/index.html">Click here to visit this version of the site.</a></p>
<h4 id="version11202024092020">Version 1.1 (2020-24/09/2020)</h4>
<p>Stripped back to just a single landing page. It had nothing more than links to my social media accounts and side projects. <a href="https://csiew.github.io/index.html">Click here to visit this version of the site.</a></p>
<h3 id="vueera">Vue era</h3>
<h4 id="version2x2409202019062021">Version 2.x (24/09/2020-19/06/2021)</h4>
<p>A complete overhaul of the website as a playground to learn Vue. Like version 1.0, this iteration of the site went through drastical design changes throughout its lifetime. The CSS stylesheets I developed for this site largely came from my abandoned podcast app project. <a href="https://v2.clarencesiew.com">Click here to visit this version of the site.</a></p>
<h3 id="reactera">React era</h3>
<h4 id="version3x1906202128072021">Version 3.x (19/06/2021-28/07/2021)</h4>
<p>Another overhaul of the website, but using React this time. I wanted to practice using functional components rather than class components, and to take advantage of React Hooks. The CSS from the previous site was getting huge and unwieldy too, so it's high-time to simplify it.</p>
<p>This was the most short-lived major version of the site. Its custom components and CSS stylesheets formed the basis of the <a href="https://github.com/csiew/brioche">Brioche</a> UI library for React. The following version of this site was the first to use the library rather than internal custom components.</p>
<h4 id="version4x280720212102021">Version 4.x (28/07/2021-2/10/2021)</h4>
<p>It was identical in appearance, layout, and content to version 3.0, however it was the first version to use the <a href="https://github.com/csiew/brioche">Brioche</a> UI library. <a href="https://v4.clarencesiew.com">Click here to visit this version of the site.</a></p>
<h3 id="svelteera">Svelte era</h3>
<h4 id="version5x210202113092022">Version 5.x (2/10/2021-13/09/2022)</h4>
<p>The website was migrated to yet another frontend framework, Svelte. The original plan was to use this version as a chance to learn Tailwind CSS as well, but I just couldn't help playing around with some custom CSS to achieve some mid-2010s skeuomorphic aesthetic.</p>
<p>This version also had a couple of neobrutalist phases too, but as of version 5.10.0, skeuomorphism is back. Unlike the previous version of the website, version 5.0 did not use the Brioche UI library.</p>
<h3 id="nextjsera">NextJS era</h3>
<h4 id="version6x13092022present">Version 6.x (13/09/2022-Present)</h4>
<p>I went from one statically-generated/server-side generation framework to another. As I was working on new side projects that relied heavily on React, I thought it would be nice to once again use my website as a React playground. I still wanted to use static generation for blog posts, so at first I looked at using a plugin for Vite, but I wasn't able to figure out the configuration.</p>
<p>I gradually began moving out a lot of content stored as Markdown and JSON files (which required making a new Git commit and re-running a deploy of the site every time I want to modify some content) into Firebase. I also built a whole admin CMS app into the site for my own use to write and publish new blog posts, and manage listed projects and their information. In fact this description update for Version 6.x of this site's era was written using this very CMS!</p>
<p>Well, eventually the CMS was removed. It didn't quite make sense to have static content pages that dynamically fetched data from a database while also statically generating some pages. I eventually added a <a href="/now">Now</a> page to describe what I've been up to more recently. It's also meant for short notes that don't quite have the same finesse as what a blog post would have.</p>]]></content:encoded>
    </item>
  </channel>
</rss>